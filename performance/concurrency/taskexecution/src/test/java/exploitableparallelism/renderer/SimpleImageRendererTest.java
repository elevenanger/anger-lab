package exploitableparallelism.renderer;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.concurrent.Executors;

/**
 * @author : anger
 */
class SimpleImageRendererTest {

    private CharSequence images;

    @BeforeEach
    void setUp() {
        images = new StringBuilder()
            .append("China masterpieces:")
            .append("\n")
            .append("Luo shen fu")
            .append("\n")
            .append("Qian li jiang shan")
            .append("\n")
            .append("Qing ming shang he")
            .append("\n")
            .append("Fu chun shan ju");

    }

    @Test
    void testSingleRenderer() {
        SingleThreadImageRenderer renderer = new SingleThreadImageRenderer();
        renderer.renderPage(images);
    }

    @Test
    void testFutureRenderer() {
        FutureRenderer renderer = new FutureRenderer();
        renderer.renderPage(images);
    }

    @Test
    void testCompletionServiceRenderer() {
        CompletionServiceRenderer renderer = new CompletionServiceRenderer(
            Executors.newFixedThreadPool(10));
        renderer.renderPage(images);
    }

    @Test
    void testPageAndAdRenderer() {
        PageAndAdRenderer renderer = new PageAndAdRenderer();
        renderer.renderPage(images);
    }
}