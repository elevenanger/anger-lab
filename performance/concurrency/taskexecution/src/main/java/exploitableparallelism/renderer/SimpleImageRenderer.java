package exploitableparallelism.renderer;

import cn.anger.concurrency.ThreadUtil;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

/**
 * @author : anger
 * 单线程渲染页面
 */
public abstract class SimpleImageRenderer extends ImageRenderer {
    @Override
    abstract void renderPage(CharSequence source);
    @Override
    void renderText(CharSequence s) {
        ThreadUtil.sleep(100);
        System.out.println(s.toString().split("\n")[0]);
    }

    @Override
    List<ImageInfo> scanForImageInfo(CharSequence s) {
        return Arrays.stream(s.toString().split("\n"))
            .skip(1)
            .map(SimpleImageInfo::new)
            .collect(Collectors.toList());
    }

    @Override
    void renderImage(ImageData imageData) {
        ThreadUtil.sleep(100);
        System.out.println("rendered image => " + imageData.toString());
    }
}
